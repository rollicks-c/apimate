name: go lib

# define triggers
on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main

jobs:
  build:

    # agent
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: set up Go 1.x
      uses: actions/setup-go@v3
      with:
        go-version: 1.22

    - name: cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: install dependencies
      run: go mod tidy

    - name: run tests, generate coverage report
      run: |
        go test -coverprofile=coverage.out ./...
        go tool cover -html=coverage.out -o coverage.html
 
    - name: deploy to pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git clone https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git gh-pages
        cd gh-pages
        git checkout gh-pages || git checkout --orphan gh-pages
        cp ../coverage.html .
        git add coverage.html

        # commit changes, if any
        if git diff-index --quiet HEAD; then
          echo "No changes to commit"
        else
          git commit -m 'Update test report'
          git push origin gh-pages
        fi
